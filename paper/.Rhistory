knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
if (!require(pacman)) install.packages("pacman")
library(pacman)
p_load(rescale,
dotwhisker,
modelsummary,
# Visualization
lubridate,
# Applied
broom,
knitr,
# dependency
scales,
tidyverse,
drhutools,
# data save & data read
ggplot2,
gridExtra,
qs,
png)
set.seed(19970921)
# Theme setup
theme_set(theme_minimal())
#Data input
data <- qread("../data/paperdata.qs")
ggsave("../figures/figure1.png", figure1, width = 6, height = 4.5)
knitr::include_graphics("../figures/figure1.png")
ggsave("../figures/figure1.png", figure1, width = 6, height = 4.5)
names_coef <- c(
"DGDI" = "地方政府数字能力",
"治理能力" = "地方政府数字能力",
"`医院、卫生院床位数_全市_张`" = "地方政府卫生能力",
"ConfirmedCases_Period_City" = "本地疫情压力",
"ConfirmedCases_Period_Province" = "省级疫情压力",
"peer_pressure" = "同辈压力",
"diff202012Covid" = "民意压力",
"arm::rescale(DGDI)" = "地方政府数字能力",
"arm::rescale(治理能力)" = "地方政府数字能力",
"arm::rescale(`医院、卫生院床位数_全市_张`)" = "地方政府卫生能力",
"arm::rescale(ConfirmedCases_Period_City)" = "本地疫情压力",
"arm::rescale(ConfirmedCases_Period_Province)" = "省级疫情压力",
"arm::rescale(peer_pressure)" = "同辈压力",
"arm::rescale(diff202012Covid)" = "民意压力"
)
result <- glm(load ~ 治理能力 + `医院、卫生院床位数_全市_张` + ConfirmedCases_Period_City + ConfirmedCases_Period_Province + peer_pressure + diff202012Covid + 地区生产总值增长率_全市_百分比 + 年末总人口_全市_万人, family = poisson(link = "log"), data = data)
df_plot_result <- broom::tidy(result) %>%
filter(!str_detect(term, "地区生产总值增长率_全市_百分比|年末总人口_全市_万人"))
ls_brackets <- list(
c("Ability", "地方政府数字能力", "地方政府卫生能力"),
c("Pressure", "本地疫情压力", "民意压力"))
plot_RetweetNum <- {
dwplot(df_plot_result,
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times', hjust = 0), )
} %>%
add_brackets(ls_brackets)
result_rescale <- glm(load ~ arm::rescale(治理能力) + arm::rescale(`医院、卫生院床位数_全市_张`) + arm::rescale(ConfirmedCases_Period_City) + arm::rescale(ConfirmedCases_Period_Province) +  arm::rescale(peer_pressure) + arm::rescale(diff202012Covid) + 地区生产总值增长率_全市_百分比 + 年末总人口_全市_万人, family = poisson(link = "log"), data = data)
df_plot_result_rescale <- broom::tidy(result_rescale) %>%
filter(!str_detect(term, "地区生产总值增长率_全市_百分比|年末总人口_全市_万人"))
plot_RetweetNum_rescale <- {
dwplot(df_plot_result_rescale,
ci = 0.9,
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times', hjust = -0.01))
} %>%
add_brackets(ls_brackets)
figure1 <- grid.arrange(plot_RetweetNum, plot_RetweetNum_rescale, ncol = 2, nrow = 1)
ggsave("../figures/figure1.png", figure1, width = 6, height = 4.5)
plot_RetweetNum <- {
dwplot(df_plot_result,
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times', hjust = -0.05), )
} %>%
add_brackets(ls_brackets)
result_rescale <- glm(load ~ arm::rescale(治理能力) + arm::rescale(`医院、卫生院床位数_全市_张`) + arm::rescale(ConfirmedCases_Period_City) + arm::rescale(ConfirmedCases_Period_Province) +  arm::rescale(peer_pressure) + arm::rescale(diff202012Covid) + 地区生产总值增长率_全市_百分比 + 年末总人口_全市_万人, family = poisson(link = "log"), data = data)
df_plot_result_rescale <- broom::tidy(result_rescale) %>%
filter(!str_detect(term, "地区生产总值增长率_全市_百分比|年末总人口_全市_万人"))
plot_RetweetNum_rescale <- {
dwplot(df_plot_result_rescale,
ci = 0.9,
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times', hjust = -0.05))
} %>%
add_brackets(ls_brackets)
figure1 <- grid.arrange(plot_RetweetNum, plot_RetweetNum_rescale, ncol = 2, nrow = 1)
ggsave("../figures/figure1.png", figure1, width = 6, height = 4.5)
plot_RetweetNum <- {
dwplot(df_plot_result,
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times', hjust = -0.5), )
} %>%
add_brackets(ls_brackets)
result_rescale <- glm(load ~ arm::rescale(治理能力) + arm::rescale(`医院、卫生院床位数_全市_张`) + arm::rescale(ConfirmedCases_Period_City) + arm::rescale(ConfirmedCases_Period_Province) +  arm::rescale(peer_pressure) + arm::rescale(diff202012Covid) + 地区生产总值增长率_全市_百分比 + 年末总人口_全市_万人, family = poisson(link = "log"), data = data)
df_plot_result_rescale <- broom::tidy(result_rescale) %>%
filter(!str_detect(term, "地区生产总值增长率_全市_百分比|年末总人口_全市_万人"))
plot_RetweetNum_rescale <- {
dwplot(df_plot_result_rescale,
ci = 0.9,
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times', hjust = -0.5))
ggsave("../figures/figure1.png", figure1, width = 8, height = 4.5)
ggsave("../figures/figure1.png", figure1, width = 6, height = 4.5)
names_coef <- c(
"DGDI" = "地方政府数字能力",
"治理能力" = "地方政府数字能力",
"`医院、卫生院床位数_全市_张`" = "地方政府卫生能力",
"ConfirmedCases_Period_City" = "本地疫情压力",
"ConfirmedCases_Period_Province" = "省级疫情压力",
"peer_pressure" = "同辈压力",
"diff202012Covid" = "民意压力",
"arm::rescale(DGDI)" = "地方政府数字能力",
"arm::rescale(治理能力)" = "地方政府数字能力",
"arm::rescale(`医院、卫生院床位数_全市_张`)" = "地方政府卫生能力",
"arm::rescale(ConfirmedCases_Period_City)" = "本地疫情压力",
"arm::rescale(ConfirmedCases_Period_Province)" = "省级疫情压力",
"arm::rescale(peer_pressure)" = "同辈压力",
"arm::rescale(diff202012Covid)" = "民意压力"
)
result <- glm(load ~ 治理能力 + `医院、卫生院床位数_全市_张` + ConfirmedCases_Period_City + ConfirmedCases_Period_Province + peer_pressure + diff202012Covid + 地区生产总值增长率_全市_百分比 + 年末总人口_全市_万人, family = poisson(link = "log"), data = data)
df_plot_result <- broom::tidy(result) %>%
filter(!str_detect(term, "地区生产总值增长率_全市_百分比|年末总人口_全市_万人"))
ls_brackets <- list(
c("Ability", "地方政府数字能力", "地方政府卫生能力"),
c("Pressure", "本地疫情压力", "民意压力"))
plot_RetweetNum <- {
dwplot(df_plot_result,
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times', hjust = -1), )
} %>%
add_brackets(ls_brackets)
result_rescale <- glm(load ~ arm::rescale(治理能力) + arm::rescale(`医院、卫生院床位数_全市_张`) + arm::rescale(ConfirmedCases_Period_City) + arm::rescale(ConfirmedCases_Period_Province) +  arm::rescale(peer_pressure) + arm::rescale(diff202012Covid) + 地区生产总值增长率_全市_百分比 + 年末总人口_全市_万人, family = poisson(link = "log"), data = data)
df_plot_result_rescale <- broom::tidy(result_rescale) %>%
filter(!str_detect(term, "地区生产总值增长率_全市_百分比|年末总人口_全市_万人"))
plot_RetweetNum_rescale <- {
dwplot(df_plot_result_rescale,
ci = 0.9,
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times', hjust = -1))
} %>%
add_brackets(ls_brackets)
figure1 <- grid.arrange(plot_RetweetNum, plot_RetweetNum_rescale, ncol = 2, nrow = 1)
ggsave("../figures/figure1.png", figure1, width = 6, height = 4.5)
names_coef <- c(
"DGDI" = "地方政府数字能力",
"治理能力" = "地方政府数字能力",
"`医院、卫生院床位数_全市_张`" = "地方政府卫生能力",
"ConfirmedCases_Period_City" = "本地疫情压力",
"ConfirmedCases_Period_Province" = "省级疫情压力",
"peer_pressure" = "同辈压力",
"diff202012Covid" = "民意压力",
"arm::rescale(DGDI)" = "地方政府数字能力",
"arm::rescale(治理能力)" = "地方政府数字能力",
"arm::rescale(`医院、卫生院床位数_全市_张`)" = "地方政府卫生能力",
"arm::rescale(ConfirmedCases_Period_City)" = "本地疫情压力",
"arm::rescale(ConfirmedCases_Period_Province)" = "省级疫情压力",
"arm::rescale(peer_pressure)" = "同辈压力",
"arm::rescale(diff202012Covid)" = "民意压力"
)
result <- glm(load ~ 治理能力 + `医院、卫生院床位数_全市_张` + ConfirmedCases_Period_City + ConfirmedCases_Period_Province + peer_pressure + diff202012Covid + 地区生产总值增长率_全市_百分比 + 年末总人口_全市_万人, family = poisson(link = "log"), data = data)
df_plot_result <- broom::tidy(result) %>%
filter(!str_detect(term, "地区生产总值增长率_全市_百分比|年末总人口_全市_万人"))
ls_brackets <- list(
c("Ability", "地方政府数字能力", "地方政府卫生能力"),
c("Pressure", "本地疫情压力", "民意压力"))
plot_RetweetNum <- {
dwplot(df_plot_result,
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times', hjust = -1), )
} %>%
add_brackets(ls_brackets)
result_rescale <- glm(load ~ arm::rescale(治理能力) + arm::rescale(`医院、卫生院床位数_全市_张`) + arm::rescale(ConfirmedCases_Period_City) + arm::rescale(ConfirmedCases_Period_Province) +  arm::rescale(peer_pressure) + arm::rescale(diff202012Covid) + 地区生产总值增长率_全市_百分比 + 年末总人口_全市_万人, family = poisson(link = "log"), data = data)
df_plot_result_rescale <- broom::tidy(result_rescale) %>%
filter(!str_detect(term, "地区生产总值增长率_全市_百分比|年末总人口_全市_万人"))
plot_RetweetNum_rescale <- {
dwplot(df_plot_result_rescale,
ci = 0.9,
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times', hjust = -1))
} %>%
add_brackets(ls_brackets)
ggsave("../figures/figure1.png", figure1, width = 6, height = 4.5)
ggsave("../figures/figure1.png", figure1, width = 8, height = 4.5)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
if (!require(pacman)) install.packages("pacman")
library(pacman)
p_load(rescale,
dotwhisker,
modelsummary,
# Visualization
lubridate,
# Applied
broom,
knitr,
# dependency
scales,
tidyverse,
drhutools,
# data save & data read
ggplot2,
gridExtra,
qs,
png,
kableExtra)
set.seed(19970921)
# Theme setup
theme_set(theme_minimal())
#Data input
data <- qread("../data/paperdata.qs")
knitr::include_graphics("../figures/figure2.png")
table1 <- data.frame("中央防控政策" = 1, "均值" = 1.23, "最大值" = 3, "最小值" = 1, "均值 " = 1.81, "最大值 " = 5, "最小值 " = 1)
kbl(table1, booktabs = T, align = "c", caption = "中央、省和地级市疫情防控政策比较") %>%
kable_styling(latex_options = "hold_position") %>%
add_header_above(c(" " = 1, "省级防控政策" = 3, "市级防控政策" = 3))
covid <- read.csv("/Users/sunyufei/Downloads/covid_data.csv")
boxplot(covid$distancing_n,ylim = c(0, 60),ylab ="Number of distancing measures",
main = "Distribution of distancing measures")
barplot(covid$deaths_cum_per_million,main = "Distribution of COVID-19 deaths per 1,000,000 people",
ylab = "COVID-19 deaths per 1,000,000 people", ylim = c(0, 3500))
View(covid)
？barplot
?barplot
barplot(covid$deaths_cum_per_million,main = "Distribution of COVID-19 deaths per 1,000,000 people",
ylab = "COVID-19 deaths per 1,000,000 people", ylim = c(0, 3500), density = TRUE)
#question1
sum(is.na(covid))
#question1
sum(is.na(covid$country))
sum(is.na(covid$continent))
sum(is.na(covid$electoral_pop))
?barplot
covid_europe <- covid[covid$continent == "Europe",]
fit1 <- lm(distancing_n ~ electoral_pop, data=covid_europe)
plot(covid_europe$electoral_pop, covid_europe$distancing_n,  col = ifelse(covid_europe$electoral_pop==0,"red","blue"),
xlab = "", xaxt = "n",
ylim=c(0,60),ylab = "Total number of distancing measures",pch=1)
axis(1, at = c(0,1), labels = c("Non-populist leader", "Populist leader"))
abline(h=mean(covid_europe$distancing_n[covid_europe$electoral_pop==0]),col="red")
covid_europe$distancing_n[covid_europe$electoral_pop==0]
mean(covid_europe$distancing_n[covid_europe$electoral_pop==0])
covid_europe$distancing_n[covid_europe$electoral_pop==0]
abline(h=mean(na.omit(covid_europe$distancing_n[covid_europe$electoral_pop==0])),col="red")
abline(h=mean(na.omit(covid_europe$distancing_n[covid_europe$electoral_pop==1])),col="blue")
knitr::include_graphics("../figures/figure2.png")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
if (!require(pacman)) install.packages("pacman")
library(pacman)
p_load(rescale,
dotwhisker,
modelsummary,
# Visualization
lubridate,
# Applied
broom,
knitr,
# dependency
scales,
tidyverse,
drhutools,
# data save & data read
ggplot2,
gridExtra,
qs,
png,
kableExtra)
set.seed(19970921)
# Theme setup
theme_set(theme_minimal())
#Data input
data <- qread("../data/paperdata.qs")
View(data)
